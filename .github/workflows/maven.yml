# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven and Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B clean package -DskipTests --file pom.xml

    - name: Upload JAR Artifact
      uses: actions/upload-artifact@v3
      with:
        name: jellyfinmp-0.0.1-SNAPSHOT
        path: target/*.jar
    # Log in to Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Build Docker image
    - name: Build Docker image
      run: docker build -t jaxwang319/jellyfin-mp:latest .

    # Push Docker image to Docker Hub
    - name: Push Docker image
      run: docker push jaxwang319/jellyfin-mp:latest
